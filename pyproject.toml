[project]
name = "ishop-backend"
version = "1.0.0"
description = "iShop Persian E-commerce Platform - Backend API (FastAPI)"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["ecommerce", "persian", "farsi", "fastapi", "api", "iran", "shop", "online-store"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Office/Business :: Financial :: Point-Of-Sale",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "aiohttp>=3.12.15",
    "fastapi>=0.116.1",
    "passlib[bcrypt]>=1.7.4",
    "psycopg2-binary>=2.9.10",
    "pydantic>=2.11.7",
    "python-jose[cryptography]>=3.5.0",
    "python-multipart>=0.0.20",
    "python-slugify>=8.0.4",
    "python-telegram-bot==20.7",
    "sqlalchemy>=2.0.43",
    "uvicorn[standard]>=0.35.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.24.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/iShop"
Documentation = "https://github.com/yourusername/iShop#readme"
Repository = "https://github.com/yourusername/iShop.git"
Issues = "https://github.com/yourusername/iShop/issues"
Changelog = "https://github.com/yourusername/iShop/blob/main/CHANGELOG.md"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  migrations
  | __pycache__
  | \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]
known_third_party = ["fastapi", "pydantic", "sqlalchemy", "uvicorn"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E266", "E501", "W503"]
max-complexity = 10
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "migrations",
    "build",
    "dist"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "passlib.*",
    "jose.*",
    "sqlalchemy.*",
    "psycopg2.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests", "app"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
