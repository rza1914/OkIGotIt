حله — این «پرومپت سوپر‌دی‌تیلد Replit» نسخه‌ی کامل قبلیه + **بات تلگرام ایمپورتر**. همونو کپی کن تو Replit AI. (تأکید: **به هیچ وجه `vite.config.ts` رو دست نزن**.)

---

# 🔧 Replit AI — Build iShop (React + FastAPI + Telegram Importer)

**Do NOT edit `vite.config.ts`. Assume it’s correct.**

## 0) Goal

Full-stack app: **iShop**

* **Frontend (RTL, Light, Apple-like):** React + Vite + TS + Tailwind (یا CSS Modules). پس‌زمینه سفید، تایپو تمیز، اَکنت رزگلد/طلایی. هوم: **یک بنر بزرگ + ۴ بنر کوچک** (۲×۲)، Blog Preview، DateBadge (تاریخ امروز فارسی).
* **Backend:** FastAPI + SQLAlchemy (SQLite dev)، JWT ساده برای ادمین.
* **Admin Dashboard (/admin):** ویرایش بنرها (hero + چهار بنر کوچک): **title / image\_url / link\_url / price / currency / active**.
* **Runtime API config:** از `public/app-config.json` برای `API_BASE` استفاده کن (نه پراکسی، نه تغییر Vite).
* **Telegram Importer Bot:** پیام‌های فورواردشده از کانال اصلی را **پارس** کند (نام، توضیح، دسته‌بندی، قیمت)، تصویر را بگیرد، و به سایت **محصول جدید اضافه** کند.

---

## 1) Tech & Scripts

**Front:** React, Vite, TS, Tailwind (preferred), `lucide-react`
**Back:** FastAPI, Uvicorn, SQLAlchemy, Pydantic
**Bot:** `python-telegram-bot` (یا aiogram؛ ترجیح: python-telegram-bot v20+)

**requirements.txt**

```
fastapi
uvicorn[standard]
sqlalchemy
pydantic
python-multipart
python-telegram-bot==20.7
```

**package.json (بدون دست‌زدن به vite.config.ts)**

```json
{
  "scripts": {
    "dev": "concurrently -k \"uvicorn app.main:app --host 127.0.0.1 --port 8000 --reload\" \"vite --host 0.0.0.0 --port $PORT\" \"python -m bot.telegram_importer\"",
    "build": "vite build",
    "preview": "vite preview --host --port $PORT"
  },
  "devDependencies": {
    "concurrently": "^9.0.0",
    "tailwindcss": "^3.4.13",
    "postcss": "^8.4.47",
    "autoprefixer": "^10.4.20",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "lucide-react": "^0.541.0"
  }
}
```

**public/app-config.json**

* Dev (Replit): `{"API_BASE":"http://127.0.0.1:8000/api/v1"}`
* Prod (یک‌دامنه): `{"API_BASE":"/api/v1"}`

---

## 2) Data & Models

**Banner** (۵ اسلات ثابت):
`id, key(hero|small1..4 unique), title?, image_url, link_url?, price:int, currency:str(IRT), active:bool, position:int, updated_at`

**Product**:
`id, name, description, category, price:int, currency:str(IRT), image_url?, slug, stock:int(default 0), is_active:bool`

**User (admin)**:
`id, username, password_hash`

---

## 3) API (`/api/v1`)

* `GET /health` → `{ok:true}`
* **Auth**

  * `POST /auth/login` `{username,password}` → `{access_token}`
  * `GET /auth/user` (JWT)
* **Banners**

  * `GET /banners` (sorted: hero, small1..4)
  * `GET /banners/{key}`
  * `PUT /banners/{key}` (auth) → update fields: `title,image_url,link_url,price,currency,active`
* **Products**

  * `GET /products` (+filters opt)
  * `GET /products/{id}`
  * `POST /products` (auth OR Importer token)

    * Accept **JSON** و **multipart/form-data** (برای تصویر).
    * Fields: `name, description, category, price, currency='IRT', image_file? or image_url`
* **Importer-only** (اختیاری برای سادگی امنیت):

  * همان `POST /products` ولی اگر هدر `X-Importer-Key: <IMPORTER_TOKEN>` باشد، نیازی به JWT نیست.

**امنیت (DEV باز / PROD محدود):**
CORS را در Dev باز بگذار. در Prod به دامنه خودت محدود کن. هدرهای امنیتی را ست کن (در Nginx/Starlette).

---

## 4) Frontend (RTL, Light, Apple-like)

ساختار:

```
src/
  main.tsx
  App.tsx
  index.css
  lib/
    runtimeConfig.ts    # خواندن app-config.json
    api.ts              # helper با API_BASE
    date.ts             # تاریخ فارسی/شمسی با اعداد فارسی
  components/
    Header.tsx          # با DateBadge و سبد
    Hero.tsx            # شعار + جا برای بنر بزرگ
    BannerGrid.tsx      # ۴ بنر کوچک ۲×۲ (قیمت هرکدام نمایش داده شود)
    BlogPreview.tsx     # ۳ کارت وبلاگ
    Footer.tsx
  pages/
    Home.tsx
    Admin.tsx           # داشبورد ادمین بنرها
```

**Home:**

* Hero: راست بنر بزرگ (تصویر)، چپ **شعار** زیر (عیناً):
  `با #آیـشــــــــــــــــــاپ هر چ ک دلت بخاد رو میتونی با قیمت مناسب از #دبــــــــــــی خرید کنی و هر جا #ایران هستی تحویل بگیری`
* BannerGrid (۴ کارت): تصویر + قیمت + لینک.
* Blog Preview, Footer.
  **/admin:** فرم ورود → جدول ۵ اسلات بنر → ویرایش فیلدها + Save (PUT /banners/{key}).

---

## 5) Telegram Importer Bot

**هدف:** با فوروارد پیام از کانال اصلی، **محصول جدید** در سایت ثبت شود (نام/توضیح/دسته/قیمت + تصویر).

**پکیج:** `python-telegram-bot`
**ماژول:** `bot/telegram_importer.py`

**ENV (Replit Secrets):**

* `BOT_TOKEN` → توکن ربات تلگرام
* `MAIN_CHANNEL_ID` → عدد (ex: -1001234567890)؛ فقط پیام‌هایی که `forward_from_chat.id` برابر این باشد معتبرند
* `ADMIN_CHAT_ID` → برای ناتیف خطا/موفقیت (اختیاری)
* `IMPORTER_TOKEN` → کلید مشترک؛ با هدر `X-Importer-Key` به `/api/v1/products`
* `API_BASE` → اختیاری (اگر نخواستی از app-config بخونی؛ برای بات بهتره مستقیم `http://127.0.0.1:8000/api/v1`)

**پترن پیام و پارسر (انعطاف‌پذیر):**

* ربات باید این قالب‌ها را پشتیبانی کند (هرکدام بود parse کند):

1. **کلیدواژه‌ای (ترجیحی):**

```
نام محصول: کیف دستی رزگلد
دسته‌بندی: کیف زنانه
قیمت: 1,250,000 تومان
توضیحات: چرم طبیعی، بند طلایی، مناسب مهمانی
```

2. **هاشتگ + قیمت خط آخر:**

```
کیف دستی رزگلد
چرم طبیعی، بند طلایی
#کیف #زنانه
1,250,000 تومان
```

3. **فرمت فشرده:**

```
کیف دستی رزگلد | کیف زنانه | 1250000 | چرم طبیعی بند طلایی
```

**قوانین پارس:**

* **قیمت:** عدد با یا بدون ویرگول/فاصله + (تومان|ت | ریال | \$). ارقام فارسی را به انگلیسی تبدیل کن. اگر ریال بود به تومان تقسیم بر 10. اگر `$` بود فعلاً نگه‌دار و currency=`USD`.
* **دسته‌بندی:** اگر خط «دسته‌بندی:» نبود، از **هاشتگ‌ها** یا از دومین فیلدِ فرمت فشرده.
* **نام:** اولویت با «نام محصول:»، در غیر این صورت **خط اول**.
* **توضیحات:** باقی خطوط غیر قیمت/دسته/نام.
* **تصویر:** اگر پیام **photo** داشت، بزرگ‌ترین اندازه را دانلود کن.

**جریان کار بات:**

1. فقط پیام **forwarded** از `MAIN_CHANNEL_ID` را قبول کن. بقیه را نادیده بگیر/خطا بده.
2. پیام و media (photo/caption/متن) را بخوان، **پارس** کن → `{name, description, category, price, currency, image_file?}`
3. اگر تصویر هست: فایل را از تلگرام دانلود و با `multipart/form-data` به API بفرست:

   * `POST /api/v1/products` با هدر `X-Importer-Key: <IMPORTER_TOKEN>`
   * فیلدها: `name, description, category, price, currency` + `image_file`
   * اگر تصویر نبود، `image_url` اختیاری.
4. نتیجه را به `ADMIN_CHAT_ID` ریپلای کن (Created ID / خطا با توضیح).
5. دستورات کمکی:

   * `/ping` → `pong`
   * `/help` → نمونه قالب‌های پیام و راهنما (فارسی)

**تابع‌های کمکی:**

* `digits_fa_to_en(s)` → تبدیل اعداد فارسی/عربی به انگلیسی
* regexهای نمونه:

  * قیمت: `r'(\\d[\\d\\s,\\.]*)(?:\\s*)(تومان|ت|ریال|\\$)?'`
  * کلیدها: `r'نام\\s*محصول\\s*:\\s*(.+)'`, `r'دسته\\s*بندی\\s*:\\s*(.+)'`, `r'توضیحات\\s*:\\s*([\\s\\S]+)'`
* انتخاب بزرگ‌ترین عکس: `update.message.photo[-1]`

---

## 6) Admin Dashboard

* **Login form** → دریافت JWT از `/auth/login` (با `ADMIN_USERNAME`/`ADMIN_PASSWORD` از Secrets).
* صفحه لیست ۵ بنر (hero + small1..4) با **قیمت قابل ویرایش** + فیلدهای دیگر.
* روی Save → `PUT /banners/{key}`.
* Toast موفق/خطا.

---

## 7) Run & Acceptance

**Run:** در Replit، Run = `npm run dev`

* Vite روی `$PORT`
* FastAPI روی `127.0.0.1:8000`
* Bot به‌صورت همزمان اجرا می‌شود.

**قبولی:**

* هوم: **۱ بنر بزرگ + ۴ کوچک** ریسپانسیو + نمایش قیمت هر بنر.
* `/admin`: ورود و ویرایش قیمت/تصویر/لینک بنرها.
* `/api/v1/products` کار می‌کند (Create/Read).
* بات: پیام فوروارد شده از کانال اصلی → **محصول جدید** ساخته می‌شود (با تصویر/قیمت/دسته).
* همه چیز بدون دست‌کاری `vite.config.ts`.

---

### نمونه پیام برای تست بات

**Caption با عکس:**

```
نام محصول: کفش مجلسی طلایی
دسته‌بندی: کفش زنانه
قیمت: ۲,۳۹۰,۰۰۰ تومان
توضیحات: پاشنه ۷ سانت، رویه براق، کالکشن رزگلد
```

اگه خواستی، می‌تونم همین الان اسکلت فایل‌های `bot/telegram_importer.py`, مدل/روت‌های FastAPI مربوط به `products` و `banners`, و صفحات `Home`/`Admin` رو هم بنویسم تا مستقیم بندازی تو پروژه.
