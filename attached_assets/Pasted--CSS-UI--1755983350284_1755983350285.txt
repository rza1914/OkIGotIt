درسته. از روی این CSS می‌بینم یه چندتا «مین‌تریگر خراب‌کن» داری که بعد از بیلد/واچ باعث می‌شن UI از هم بپاشه و رفتار لینک‌ها هم غیرقابل پیش‌بینی بشه. این «پرومپت سوپر‌دی‌تیلد» رو همون‌طور که هست به Replit AI بده تا (۱) پیکربندی Tailwind درست بشه و purge کلاس‌ها رو نابود نکنه، (۲) RTL به‌جای `* { direction: rtl }` به‌شکل ایمن روی `html` اعمال بشه، و (۳) یک‌سری utility ثابت (glass و …) اضافه شه. ❗️طبق قرارداد: به `vite.config.ts` دست نزن.

---

# 🎯 Replit AI — Fix Tailwind/RTL + Safe CSS for iShop (No purge breakage)

## 0) قوانین

* `vite.config.ts` را تغییر نده.
* Front با Vite + Tailwind؛ back با FastAPI که `dist/` را سرو می‌کند.
* API‌ها نسبی (`/api/v1`) هستند.

## 1) Tailwind را درست پیکربندی کن (جلوی purge ناقص را بگیر)

**`tailwind.config.js`** را ایجاد/به‌روزرسانی کن تا دقیقاً این محتوا را داشته باشد:

```js
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./index.html",
    "./public/**/*.html",
    "./src/**/*.{ts,tsx,js,jsx}"
  ],
  theme: {
    extend: {
      colors: {
        gold: "#d4af37",
        rose: "#b76e79",
        khaki: "#8b6f47",
      },
      boxShadow: {
        'elev': '0 10px 25px rgba(0,0,0,.08)',
      }
    },
  },
  safelist: [
    // کلاس‌هایی که ممکنه داینامیک ساخته شن و purge حذفشون کنه
    'bg-gradient-to-r','from-rose-400','to-amber-400',
    'hover:from-rose-500','hover:to-amber-500',
    'rounded-xl','shadow-lg','hover:shadow-xl',
    'focus:ring-2','focus:ring-rose-400'
  ],
  darkMode: ['class'],
  plugins: [],
};
```

> اگر بعداً کلاس‌های داینامیک دیگه‌ای ساختی (با template string)، اضافه‌شون کن به `safelist`.

## 2) PostCSS وارنینگِ ESM را ساکت کن (بدون ریسک)

یا یکی از این دو راه:

* ساده‌تر: فایل را **`postcss.config.cjs`** کن و محتوا:

```js
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};
```

* یا (اختیاری) `"type": "module"` به `package.json` اضافه کن. (روش اول امن‌تره.)

## 3) CSS پایه را ایمن و پایدار کن

فایل **`src/index.css`** را جایگزین کن با نسخه‌ی زیر (RTL ایمن، utilityهای glass، و بهداشت پایه):

```css
@tailwind base;
@tailwind components;
@tailwind utilities;

/* --- Base Layer --- */
@layer base {
  /* به جای * {direction:rtl} فقط روی html اعمال کن */
  html[dir="rtl"] { direction: rtl; }
  body { direction: inherit; }

  /* باکس سایزینگ جهانی */
  *, *::before, *::after { box-sizing: border-box; }

  html { font-family: 'Vazirmatn', system-ui, -apple-system, sans-serif; }
  body { @apply bg-white text-gray-900 antialiased; }

  /* انتخاب متن */
  ::selection { background: #fde68a; color: #111827; }

  /* اسکرول‌بار */
  ::-webkit-scrollbar { width: 6px; height: 6px; }
  ::-webkit-scrollbar-track { background: #f1f5f9; }
  ::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, #fb7185, #fbbf24);
    border-radius: 3px;
  }

  /* فوکوس قابل‌مشاهده برای دسترس‌پذیری */
  :focus-visible {
    outline: 2px solid #b76e79; /* rose */
    outline-offset: 2px;
  }
}

/* --- Components Layer --- */
@layer components {
  .btn-primary {
    @apply bg-gradient-to-r from-rose-400 to-amber-400 hover:from-rose-500 hover:to-amber-500
           text-white font-semibold px-6 py-3 rounded-xl transition-all duration-300
           shadow-lg hover:shadow-xl active:scale-95;
  }

  .btn-secondary {
    @apply border-2 border-rose-300 text-rose-600 hover:bg-rose-50 font-semibold
           px-6 py-3 rounded-xl transition-all duration-300;
  }

  .card {
    @apply bg-white rounded-2xl shadow-elev hover:shadow-xl transition-all duration-300 overflow-hidden;
  }

  .input-field {
    @apply w-full px-4 py-3 border border-gray-300 rounded-xl
           focus:outline-none focus:ring-2 focus:ring-rose-400 focus:border-transparent
           transition-all duration-300;
  }

  /* سایدبار شیشه‌ای (cart/search modals) */
  .glass {
    background: rgba(255,255,255,.6);
    -webkit-backdrop-filter: blur(18px);
    backdrop-filter: blur(18px);
    border: 1px solid rgba(0,0,0,.06);
  }
}

/* --- Utilities / Overrides --- */
.rtl-grid { grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); }
```

### چرا تغییر دادیم؟

* `* { direction: rtl }` می‌تونه رفتار المنت‌ها/پلاگین‌ها رو خراب کنه (حتی تولتیپ/درایورهای پاپ‌آپ) و با مرور HMR/Build گاهاً علامت‌دار بشه. اعمال روی `html[dir="rtl"]` استاندارد و پایدارتره.
* `safelist` جلوی حذف‌شدن کلاس‌های داینامیک رو می‌گیره؛ مشکل «اول خوب، بعد بد» اغلب از purge اشتباهه.
* کلاس `.glass` آماده برای سایدبار/مودال‌هاست.

## 4) اطمینان از ایمپورت CSS

در **`src/main.tsx`** باید `index.css` ایمپورت شده باشه:

```ts
import "./index.css";
```

## 5) بیلد تمیز + چک هدرهای کش

* یک بیلد تمیز بگیر:

```bash
rm -rf dist
npm run build
```

* Run = `npm run dev` (Uvicorn روی `0.0.0.0:$PORT` + `vite build --watch`).
* DevTools → Network روی `index.html`:

  * باید **Cache-Control: no-store** ببینی (از قبل در FastAPI ست شده باشد).
  * چانک اصلی تحت `/assets/index-*.js` ۲۰۰ برگردد (نه 404).

## 6) پذیرش (قبول نهایی)

* بعد از چند بار `build --watch`, UI **استایلش نمی‌ریزه** و لینک‌ها رفتار SPA دارند.
* هیچ 404 برای `vite.svg` و چانک‌های قدیمی نمی‌بینی.
* RTL پایدار است و روی `html[dir=rtl]` اعمال شده، نه روی همهٔ عناصر.

---

اگر باز هم بعد از مدتی «یهو» خراب شد، دو چیز را در DevTools چک کن:

1. آیا `index.html` کش شده و به چانک قدیمی اشاره می‌کند؟ (باید no-store باشد)
2. آیا کلاس‌هایی که به‌صورت داینامیک ساخته‌ای purge شده‌اند؟ (اگر بله، آن کلاس‌ها را به `safelist` اضافه کن)

با این بسته، نوسانات ناشی از purge و جهت‌دهی سراسری رفع می‌شن.
