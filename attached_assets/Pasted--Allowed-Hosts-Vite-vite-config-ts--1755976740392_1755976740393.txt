مشکل «Allowed Hosts» از Vite هست و چون گفتی به هیچ‌وجه نباید `vite.config.ts` رو دست بزنیم، راه‌حل تمیزش اینه: یه **پروکسی Dev** جلوی Vite بگذاریم تا درخواست‌های بیرونی (دامنه‌ی replit) رو به **Vite روی 127.0.0.1:5173** و API روی **127.0.0.1:8000** پاس بده. این‌طوری:

* مرورگر → (دامنه‌ی Replit روی `$PORT`) → **Express proxy**

  * `/api/**` → میره FastAPI روی `127.0.0.1:8000` (CORS حل شد چون same-origin میشه)
  * بقیه مسیرها + WebSocket HMR → میره Vite dev server روی `127.0.0.1:5173`
* به Vite، هدر Host «localhost/127.0.0.1» می‌رسه → دیگه بلاک نمیشه.
* بدون هیچ تغییری در `vite.config.ts`.

## 1) پروکسی Dev بساز

فایل `dev-proxy.js` کنار `package.json` اضافه کن:

```js
// dev-proxy.js
const express = require('express');
const { createProxyMiddleware } = require('http-proxy-middleware');

const PORT = process.env.PORT || 8080;
const app = express();

const VITE = 'http://127.0.0.1:5173';
const API  = 'http://127.0.0.1:8000';

// پروکسی API
app.use('/api', createProxyMiddleware({
  target: API,
  changeOrigin: true,
  xfwd: true,
}));

// پروکسی Vite (هم HTTP هم WebSocket برای HMR)
const viteProxy = createProxyMiddleware({
  target: VITE,
  changeOrigin: true,
  ws: true,
  xfwd: true,
  onProxyReq(proxyReq) {
    // مطمئن شو Host برای Vite قابل قبول باشه
    proxyReq.setHeader('Host', '127.0.0.1:5173');
  },
});

// همه مسیرهای دیگر به Vite
app.use('/', viteProxy);

const server = app.listen(PORT, '0.0.0.0', () => {
  console.log(`Dev proxy running on http://0.0.0.0:${PORT}`);
});

// WebSocket upgrade برای HMR
server.on('upgrade', viteProxy.upgrade);
```

نصب وابستگی:

```bash
npm i http-proxy-middleware express
```

## 2) اسکریپت‌های اجرای DEV

توی `package.json` این اسکریپت‌ها رو بذار (یا جایگزین کن):

```json
{
  "scripts": {
    "dev": "concurrently -k \"uvicorn app.main:app --host 127.0.0.1 --port 8000 --reload\" \"vite --host 127.0.0.1 --port 5173\" \"node dev-proxy.js\"",
    "build": "vite build",
    "preview": "vite preview --host --port $PORT"
  },
  "devDependencies": {
    "concurrently": "^9.0.0"
  }
}
```

* Replit فقط پورتی رو که روی `$PORT` گوش میده اکسپوز می‌کنه؛ این همون **پروکسی** ماست.
* Vite روی 127.0.0.1:5173 اجرا میشه (خارجی نیست)، FastAPI هم روی 127.0.0.1:8000 (خارجی نیست).
* پروکسی روی `$PORT` همه‌چیز رو سرو می‌کنه.

## 3) فرانت رو به `/api` وصل کن

در کلاینت، `API_BASE` رو **نسبی** کن تا از همین پروکسی رد بشه:

```js
// به جای http://localhost:8000 ...
const API_BASE = '/api/v1';
```

(اگه از `public/app-config.json` استفاده می‌کنی، Dev رو هم بذار `"/api/v1"`.)

## 4) اجرا در Replit

Run Command رو روی این بذار:

```bash
npm run dev
```

حالا آدرس Replit میره به پروکسی → پروکسی `/api` رو می‌ده به FastAPI و بقیه رو به Vite. خطای
`Blocked request. This host (...) is not allowed`
کاملاً برطرف می‌شه و **HMR** هم کار می‌کنه.

---

### گزینه‌ی جایگزین (اگه HMR نمی‌خوای):

اگر فعلاً فقط می‌خوای بالا بیاد:

```bash
npm run build
npm run preview   # Vite preview روی $PORT
```

`vite preview` معمولاً محدودیت allowedHosts نداره. اما برای توسعه، راه پروکسی بالا بهتره.

اگر هر جا گیر کردی، خروجی ترمینال Replit یا لاگ پروکسی رو بفرست؛ دقیق همون‌جا رو برات می‌گیرم.
